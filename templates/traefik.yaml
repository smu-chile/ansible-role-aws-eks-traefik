kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik
  namespace: traefik
  labels:
    app: traefik
spec:
  replicas: 3
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.4
          args:
            - --api.insecure
            - --accesslog
            - --entrypoints.web.address=:80
            - --entrypoints.web.http.redirections.entryPoint.to=websecure
            - --entrypoints.websecure.address=:443
            - --entrypoints.websecure.http.tls
            - --providers.kubernetesingress
            - --providers.kubernetescrd
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: traefik
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/group.name: sg-0a4954782ffb8afd0
    external-dns.alpha.kubernetes.io/hostname: {{ TRAEFIK_HOSTNAME }}
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  selector:
    app: traefik
  ports:
    - protocol: TCP
      port: 80
      name: web
      targetPort: 80
    - protocol: TCP
      port: 443
      name: websecure
      targetPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-admin
  namespace: traefik
spec:
  selector:
    app: traefik
  ports:
    - protocol: TCP
      name: admin
      port: 80
      targetPort: 8080
---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1
metadata:
  name: traefik-tls
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: traefik-test-auth@kubernetescrd
    external-dns.alpha.kubernetes.io/target: {{ TRAEFIK_HOSTNAME }}
spec:
  tls:
  - hosts:
    - {{ TRAEFIK_ADMIN_HOSTNAME }}
    secretName: traefik-cert-prod # < cert-manager will store the created certificate in this secret.
  rules:
    - host: {{ TRAEFIK_ADMIN_HOSTNAME }}
      http:
        paths:
          - path: /
            backend:
              serviceName: traefik-admin
              servicePort: 80
---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1
metadata:
  name: traefik
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
    - host: {{ TRAEFIK_ADMIN_HOSTNAME }}
      http:
        paths:
          - path: /
            backend:
              serviceName: traefik-admin
              servicePort: 80